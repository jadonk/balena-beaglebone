From 23d37da4c815330fdfeb1948a013bdeca123189b Mon Sep 17 00:00:00 2001
From: Alexandru Costache <alexandru@balena.io>
Date: Thu, 10 Dec 2020 18:09:29 +0100
Subject: [PATCH] Load uboot device tree overlays

Set u-boot to load device tree overlays from "/boot/overlays" folder
of the root partition

Upstream-status: Inappropriate [configuration]
Signed-off-by: Sebastian Panceac <sebastian@balena.io>
---
 board/ti/am335x/board.c           | 50 ++++++++---------
 include/configs/am335x_evm.h      |  2 +-
 include/configs/ti_armv7_common.h | 92 ++-----------------------------
 include/environment/ti/mmc.h      |  5 +-
 4 files changed, 35 insertions(+), 114 deletions(-)

diff --git a/board/ti/am335x/board.c b/board/ti/am335x/board.c
index 876fc57434..8a918c51ff 100644
--- a/board/ti/am335x/board.c
+++ b/board/ti/am335x/board.c
@@ -120,7 +120,7 @@ void do_board_detect(void)
 static int probe_cape_eeprom(struct am335x_cape_eeprom_id *cape_header)
 {
 	unsigned char addr;
-	/* /lib/firmware/BB-CAPE-DISP-CT4-00A0.dtbo */
+	/* /boot/overlays/BB-CAPE-DISP-CT4-00A0.dtbo */
 	/* 14 + 16 + 1 + 4 + 5 = 40 */
 	char hash_cape_overlay[40];
 	char cape_overlay[26];
@@ -253,7 +253,7 @@ static int probe_cape_eeprom(struct am335x_cape_eeprom_id *cape_header)
 
 			if (cape_header->header == 0xEE3355AA) {
 				printf("BeagleBone Cape EEPROM: found EEPROM at address: 0x%x\n", addr);
-				strlcpy(hash_cape_overlay, "/lib/firmware/", 14 + 1);
+				strlcpy(hash_cape_overlay, "/boot/overlays/", strlen("/boot/overlays/") + 1);
 				strlcpy(cape_overlay, "", 2);
 				strlcpy(cape_overlay_pass_to_kernel, "", 2);
 				strlcpy(process_cape_part_number, "...............", 16 + 1);
@@ -322,79 +322,79 @@ static int probe_cape_eeprom(struct am335x_cape_eeprom_id *cape_header)
 				printf("BeagleBone Cape EEPROM: 0x%x: %s [0x%lx]\n", addr, cape_overlay, cape_overlay_hash);
 
 				switch(cape_overlay_hash) {
-					case 0x3c766f: /* /lib/firmware/BB-CAPE-DISP-CT4-00A0.dtbo */
+					case 0x3c766f: /* /boot/overlays/BB-CAPE-DISP-CT4-00A0.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0x24f51cf: /* /lib/firmware/BB-BONE-CAM-VVDN-00A0.dtbo */
+					case 0x24f51cf: /* /boot/overlays/BB-BONE-CAM-VVDN-00A0.dtbo */
 						virtual_emmc=PINS_TAKEN;
 						break;
-					case 0x4b0c13f: /* /lib/firmware/NL-AB-BBCL-00B0.dtbo */
+					case 0x4b0c13f: /* /boot/overlays/NL-AB-BBCL-00B0.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0x74e7bbf: /* /lib/firmware/bb-justboom-dac-00A0.dtbo */
+					case 0x74e7bbf: /* /boot/overlays/bb-justboom-dac-00A0.dtbo */
 						virtual_audio=PINS_TAKEN;
 						break;
-					case 0x93b574f: /* /lib/firmware/BB-GREEN-HDMI-00A0.dtbo */
+					case 0x93b574f: /* /boot/overlays/BB-GREEN-HDMI-00A0.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0x9dcd73f: /* /lib/firmware/BB-BONE-NH10C-01-00A0.dtbo */
+					case 0x9dcd73f: /* /boot/overlays/BB-BONE-NH10C-01-00A0.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xb1b7bbf: /* /lib/firmware/bb-justboom-amp-00A0.dtbo */
+					case 0xb1b7bbf: /* /boot/overlays/bb-justboom-amp-00A0.dtbo */
 						virtual_audio=PINS_TAKEN;
 						break;
 					//d15bb
-					case 0xd15b80f: /* /lib/firmware/DLPDLCR2000-00A0.dtbo */
+					case 0xd15b80f: /* /boot/overlays/DLPDLCR2000-00A0.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xd4c9eff: /* /lib/firmware/bb-justboom-digi-00A0.dtbo */
+					case 0xd4c9eff: /* /boot/overlays/bb-justboom-digi-00A0.dtbo */
 						virtual_audio=PINS_TAKEN;
 						break;
-					case 0xe05061f: /* /lib/firmware/BBORG_DISPLAY70-00A2.dtbo */
+					case 0xe05061f: /* /boot/overlays/BBORG_DISPLAY70-00A2.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xe3f55df: /* /lib/firmware/BB-BONE-NH7C-01-A0.dtbo */
+					case 0xe3f55df: /* /boot/overlays/BB-BONE-NH7C-01-A0.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xfc93c8f: /* /lib/firmware/BB-BONE-LCD7-01-00A3.dtbo */
+					case 0xfc93c8f: /* /boot/overlays/BB-BONE-LCD7-01-00A3.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
 					//fe131
-					case 0xfe1313f: /* /lib/firmware/BB-BONE-4D5R-01-00A1.dtbo */
+					case 0xfe1313f: /* /boot/overlays/BB-BONE-4D5R-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
 					//fe132
-					case 0xfe1323f: /* /lib/firmware/BB-BONE-4D4R-01-00A1.dtbo */
+					case 0xfe1323f: /* /boot/overlays/BB-BONE-4D4R-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xfe1327f: /* /lib/firmware/BB-BONE-4D4N-01-00A1.dtbo */
+					case 0xfe1327f: /* /boot/overlays/BB-BONE-4D4N-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xfe132cf: /* /lib/firmware/BB-BONE-4D4C-01-00A1.dtbo */
+					case 0xfe132cf: /* /boot/overlays/BB-BONE-4D4C-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
 					//fe133
-					case 0xfe1337f: /* /lib/firmware/BB-BONE-4D7N-01-00A1.dtbo */
+					case 0xfe1337f: /* /boot/overlays/BB-BONE-4D7N-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xfe133cf: /* /lib/firmware/BB-BONE-4D7C-01-00A1.dtbo */
+					case 0xfe133cf: /* /boot/overlays/BB-BONE-4D7C-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
 					//fe135
-					case 0xfe1357f: /* /lib/firmware/BB-BONE-4D5N-01-00A1.dtbo */
+					case 0xfe1357f: /* /boot/overlays/BB-BONE-4D5N-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xfe135cf: /* /lib/firmware/BB-BONE-4D5C-01-00A1.dtbo */
+					case 0xfe135cf: /* /boot/overlays/BB-BONE-4D5C-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
 					//fe137
-					case 0xfe1373f: /* /lib/firmware/BB-BONE-4D7R-01-00A1.dtbo */
+					case 0xfe1373f: /* /boot/overlays/BB-BONE-4D7R-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xfe93c1f: /* /lib/firmware/BB-BONE-LCD4-01-00A1.dtbo */
+					case 0xfe93c1f: /* /boot/overlays/BB-BONE-LCD4-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
-					case 0xfe93c2f: /* /lib/firmware/BB-BONE-LCD5-01-00A1.dtbo */
+					case 0xfe93c2f: /* /boot/overlays/BB-BONE-LCD5-01-00A1.dtbo */
 						virtual_video=PINS_TAKEN;
 						break;
 				}
diff --git a/include/configs/am335x_evm.h b/include/configs/am335x_evm.h
index 0b42c29dc3..c97843d72b 100644
--- a/include/configs/am335x_evm.h
+++ b/include/configs/am335x_evm.h
@@ -239,7 +239,7 @@
 		"fi;\0" \
 	EEWIKI_NFS \
 	EEWIKI_BOOT \
-	EEWIKI_UNAME_BOOT \
+	LOAD_UBOOT_OVERLAYS \
 	EEPROM_PROGRAMMING \
 	NANDARGS \
 	NETARGS \
diff --git a/include/configs/ti_armv7_common.h b/include/configs/ti_armv7_common.h
index 7de6619e8e..f3eacb983d 100644
--- a/include/configs/ti_armv7_common.h
+++ b/include/configs/ti_armv7_common.h
@@ -329,14 +329,9 @@
 			"done;" \
 		"fi;\0" \
 
-#define EEWIKI_UNAME_BOOT \
-	"uname_boot="\
-		"setenv bootdir /boot; " \
-		"setenv bootfile vmlinuz-${uname_r}; " \
-		"if test -e ${devtype} ${bootpart} ${bootdir}/${bootfile}; then " \
-			"echo loading ${bootdir}/${bootfile} ...; "\
-			"run loadimage;" \
-			"setenv fdtdir /boot/dtbs/${uname_r}; " \
+#define LOAD_UBOOT_OVERLAYS \
+       "handle_overlays="\
+                       "setenv bootdir /boot; " \
 			"echo debug: [enable_uboot_overlays=${enable_uboot_overlays}] ... ;" \
 			"if test -n ${enable_uboot_overlays}; then " \
 				"echo debug: [enable_uboot_cape_universal=${enable_uboot_cape_universal}] ... ;" \
@@ -373,44 +368,8 @@
 			"fi;" \
 			"if test -e ${devtype} ${bootpart} ${fdtdir}/${fdtfile}; then " \
 				"run loadfdt;" \
-			"else " \
-				"setenv fdtdir /usr/lib/linux-image-${uname_r}; " \
-				"if test -e ${devtype} ${bootpart} ${fdtdir}/${fdtfile}; then " \
-					"run loadfdt;" \
-				"else " \
-					"setenv fdtdir /lib/firmware/${uname_r}/device-tree; " \
-					"if test -e ${devtype} ${bootpart} ${fdtdir}/${fdtfile}; then " \
-						"run loadfdt;" \
-					"else " \
-						"setenv fdtdir /boot/dtb-${uname_r}; " \
-						"if test -e ${devtype} ${bootpart} ${fdtdir}/${fdtfile}; then " \
-							"run loadfdt;" \
-						"else " \
-							"setenv fdtdir /boot/dtbs; " \
-							"if test -e ${devtype} ${bootpart} ${fdtdir}/${fdtfile}; then " \
-								"run loadfdt;" \
-							"else " \
-								"setenv fdtdir /boot/dtb; " \
-								"if test -e ${devtype} ${bootpart} ${fdtdir}/${fdtfile}; then " \
-									"run loadfdt;" \
-								"else " \
-									"setenv fdtdir /boot; " \
-									"if test -e ${devtype} ${bootpart} ${fdtdir}/${fdtfile}; then " \
-										"run loadfdt;" \
-									"else " \
-										"if test -e ${devtype} ${bootpart} ${fdtfile}; then " \
-											"run loadfdt;" \
-										"else " \
-											"echo; echo unable to find [dtb=${fdtfile}] did you name it correctly? ...; " \
-											"run failumsboot;" \
-										"fi;" \
-									"fi;" \
-								"fi;" \
-							"fi;" \
-						"fi;" \
-					"fi;" \
-				"fi;" \
-			"fi; " \
+                               "setenv boot_fdt no;" \
+                        "fi;" \
 			"if test -n ${enable_uboot_overlays}; then " \
 				"setenv fdt_buffer 0x60000;" \
 				"if test -n ${uboot_fdt_buffer}; then " \
@@ -528,46 +487,7 @@
 				"fi;" \
 			"else " \
 				"echo uboot_overlays: add [enable_uboot_overlays=1] to /boot/uEnv.txt to enable...;" \
-			"fi;" \
-			"setenv rdfile initrd.img-${uname_r}; " \
-			"if test -e ${devtype} ${bootpart} ${bootdir}/${rdfile}; then " \
-				"echo loading ${bootdir}/${rdfile} ...; "\
-				"run loadrd;" \
-				"if test -n ${netinstall_enable}; then " \
-					"run args_netinstall; run message;" \
-					"echo debug: [${bootargs}] ... ;" \
-					"echo debug: [bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr}] ... ;" \
-					"bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr}; " \
-				"fi;" \
-				"if test -n ${uenv_root}; then " \
-					"run args_uenv_root;" \
-					"echo debug: [${bootargs}] ... ;" \
-					"echo debug: [bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr}] ... ;" \
-					"bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr}; " \
-				"fi;" \
-				"if test -n ${uuid}; then " \
-					"run args_mmc_uuid;" \
-					"echo debug: [${bootargs}] ... ;" \
-					"echo debug: [bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr}] ... ;" \
-					"bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr}; " \
-				"fi;" \
-				"run args_mmc_old;" \
-				"echo debug: [${bootargs}] ... ;" \
-				"echo debug: [bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr}] ... ;" \
-				"bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr}; " \
-			"else " \
-				"if test -n ${uenv_root}; then " \
-					"run args_uenv_root;" \
-					"echo debug: [${bootargs}] ... ;" \
-					"echo debug: [bootz ${loadaddr} - ${fdtaddr}] ... ;" \
-					"bootz ${loadaddr} - ${fdtaddr}; " \
-				"fi;" \
-				"run args_mmc_old;" \
-				"echo debug: [${bootargs}] ... ;" \
-				"echo debug: [bootz ${loadaddr} - ${fdtaddr}] ... ;" \
-				"bootz ${loadaddr} - ${fdtaddr}; " \
-			"fi;" \
-		"fi;\0" \
+			"fi;\0" \
 
 /*
  * When we have SPI, NOR or NAND flash we expect to be making use of
diff --git a/include/environment/ti/mmc.h b/include/environment/ti/mmc.h
index 4f06f5bf2b..ac1aaa0cfc 100644
--- a/include/environment/ti/mmc.h
+++ b/include/environment/ti/mmc.h
@@ -54,7 +54,7 @@
 	"bootenv=uEnv.txt\0" \
 	"importbootenv=echo Importing environment from ${devtype} ...; " \
 		"env import -t ${loadaddr} ${filesize}\0" \
-	"loadbootenv=load ${devtype} ${bootpart} ${loadaddr} ${bootenvfile}\0" \
+	"loadbootenv=load ${resin_dev_type} ${resin_dev_index}:${resin_boot_part} ${loadaddr} ${bootenvfile}\0" \
 	"loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}\0" \
 	"loadrd=load ${devtype} ${bootpart} ${rdaddr} ${bootdir}/${rdfile}; setenv rdsize ${filesize}\0" \
 	"loadfdt=echo loading ${fdtdir}/${fdtfile} ...; load ${devtype} ${bootpart} ${fdtaddr} ${fdtdir}/${fdtfile}\0" \
@@ -112,12 +112,13 @@
 				"fi; " \
 			"fi; " \
 		"else " \
-			"bootz; " \
+			"bootz ${loadaddr} - ${fdtaddr}; " \
 		"fi;\0" \
 	"mmcboot=mmc dev ${mmcdev}; " \
 		"setenv devnum ${mmcdev}; " \
 		"setenv devtype mmc; " \
 		"if mmc rescan; then " \
+			"run handle_overlays;" \
 			"echo SD/MMC found on device ${mmcdev};" \
 			"if run loadimage; then " \
 				"if test ${boot_fit} -eq 1; then " \
-- 
2.17.1

